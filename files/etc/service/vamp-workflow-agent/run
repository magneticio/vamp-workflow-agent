#! /bin/bash

handle() { echo "vamp-workflow-agent/run: got signal"; exit; }
trap handle SIGINT

[[ -e /usr/local/vamp/good2go ]] && exit 0

: "${VAMP_WORKFLOW_AGENT_LOGO:=TRUE}"

if [ "$VAMP_WORKFLOW_AGENT_LOGO" = "TRUE" ] || [ "$VAMP_WORKFLOW_AGENT_LOGO" = "1" ]; then
echo "
██╗   ██╗ █████╗ ███╗   ███╗██████╗     ██╗    ██╗ ██████╗ ██████╗ ██╗  ██╗███████╗██╗      ██████╗ ██╗    ██╗
██║   ██║██╔══██╗████╗ ████║██╔══██╗    ██║    ██║██╔═══██╗██╔══██╗██║ ██╔╝██╔════╝██║     ██╔═══██╗██║    ██║
██║   ██║███████║██╔████╔██║██████╔╝    ██║ █╗ ██║██║   ██║██████╔╝█████╔╝ █████╗  ██║     ██║   ██║██║ █╗ ██║
╚██╗ ██╔╝██╔══██║██║╚██╔╝██║██╔═══╝     ██║███╗██║██║   ██║██╔══██╗██╔═██╗ ██╔══╝  ██║     ██║   ██║██║███╗██║
 ╚████╔╝ ██║  ██║██║ ╚═╝ ██║██║         ╚███╔███╔╝╚██████╔╝██║  ██║██║  ██╗██║     ███████╗╚██████╔╝╚███╔███╔╝
  ╚═══╝  ╚═╝  ╚═╝╚═╝     ╚═╝╚═╝          ╚══╝╚══╝  ╚═════╝ ╚═╝  ╚═╝╚═╝  ╚═╝╚═╝     ╚══════╝ ╚═════╝  ╚══╝╚══╝
"
fi

: "${VAMP_KEY_VALUE_STORE_PATH?not provided.}"
: "${VAMP_KEY_VALUE_STORE_TYPE?not provided.}"
: "${VAMP_KEY_VALUE_STORE_CONNECTION?not provided.}"
: "${VAMP_ELASTICSEARCH_URL?not provided.}"

echo "VAMP_KEY_VALUE_STORE_TYPE       : ${VAMP_KEY_VALUE_STORE_TYPE}"
echo "VAMP_KEY_VALUE_STORE_CONNECTION : ${VAMP_KEY_VALUE_STORE_CONNECTION}"
echo "VAMP_KEY_VALUE_STORE_PATH       : ${VAMP_KEY_VALUE_STORE_PATH}"
echo "VAMP_ELASTICSEARCH_URL          : ${VAMP_ELASTICSEARCH_URL}"

if [[ "${VAMP_KEY_VALUE_STORE_TYPE}" == "vault" && -n ${VAMP_VAULT_CERTIFICATE_NAME} ]]; then
  curl --cacert ${CONFD_CLIENT_CAKEYS} \
       --cert ${CONFD_CLIENT_CERT} \
       --key ${CONFD_CLIENT_KEY} \
       --request POST --data "{\"name\": \"${VAMP_VAULT_CERTIFICATE_NAME}\"}" -s \
       ${VAMP_KEY_VALUE_STORE_CONNECTION}/v1/auth/cert/login | jq -r .auth.client_token > /usr/local/vamp/token
       VAMP_KEY_VALUE_STORE_TOKEN="$( cat /usr/local/vamp/token )"
fi

if [[ -z ${VAMP_KEY_VALUE_STORE_TOKEN} ]] ; then
  echo "VAMP_KEY_VALUE_STORE_TOKEN      : "
else
  echo "VAMP_KEY_VALUE_STORE_TOKEN      : **********"
fi

printf "node  " && node --version
printf "npm   " && npm --version
/usr/bin/confd -version

/usr/local/vamp/confd-generate-templates.sh

if [[ -z ${VAMP_KEY_VALUE_STORE_TOKEN} ]] ; then
  /usr/bin/confd \
     -onetime=true \
     -backend ${VAMP_KEY_VALUE_STORE_TYPE} \
     -node ${VAMP_KEY_VALUE_STORE_CONNECTION} \
     -log-level=warn \
     -confdir /usr/local/vamp/confd || exit 1
else
  /usr/bin/confd \
     -onetime=true \
     -backend ${VAMP_KEY_VALUE_STORE_TYPE} \
     -node ${VAMP_KEY_VALUE_STORE_CONNECTION} \
     -auth-type token -auth-token ${VAMP_KEY_VALUE_STORE_TOKEN} \
     -log-level=warn \
     -confdir /usr/local/vamp/confd || exit 1
fi

touch /usr/local/vamp/good2go

: "${VAMP_WORKFLOW_PATH:="/usr/local/vamp/workflow.js"}"
: "${VAMP_WORKFLOW_HTTP_PORT:=8080}"
: "${VAMP_WORKFLOW_UI_PATH:="/usr/local/vamp/ui/"}"

if [ "${VAMP_KEY_VALUE_STORE_TYPE}" == "vault" ]; then
  /usr/local/vamp/tokenrenewer.sh &
fi

exec 2>&1
exec /usr/local/vamp/vamp-workflow-agent \
        --workflow="$VAMP_WORKFLOW_PATH" \
        --httpPort="$VAMP_WORKFLOW_HTTP_PORT" \
        --uiPath="$VAMP_WORKFLOW_UI_PATH"
